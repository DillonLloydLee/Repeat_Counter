BDD SPEC:

1.  Objective:          Have a single letter text searching for
                        itself return a positive output.
                        I think this simple as it could be.
    Main text Input:    "a"
    Search Input:       "a"
    Output:             1

2.  Objective:          Search three words for instances of a
                        single letter.  These three words will
                        not contain additional instances of
                        that letter nested inside other words,
                        therefore the test should continue to
                        work even as the function becomes more
                        complex.
    Main text Input:    "a big dog"
    Search Input:       "a"
    Output:             1

3.  Objective:          Find the letter whether it is capitalized
                        or not. Similar nesting rules from
                        objective 2.  Paragraphs often have
                        capitalized letters; this seems a simple
                        next step that will need addressing.
    Main text Input:    "A big dog is a good dog."
    Search Input:       "a"
    Output:             2

4.  Objective:          Ignore instances where the search is
                        part of another word, making this function
                        a Word Repeat Counter rather than just
                        a Letter Repeat Counter.
    Main text Input:    "The big dog named Theodore is the thief."
    Search Input:       "the"
    Output:             2

5.  Objective:          Make sure the program still finds the
                        search input if there is punctuation like
                        periods or colons.
    Main text Input:    "ERROR: THE BIG DOG IS LOOSE! ERROR!"
    Search Input:       "error"
    Output:             2

6.  Objective:          Make sure the program can handle any type
                        of search input without an error.  I can't
                        think why any search wouldn't function, but
                        let's test some numbers and special
                        characters to make sure our function doesn't
                        break when users are trying to find
                        something strange.
    Main text Input:    "666BATCH_ERROR~!!%: THE BIG DOG IS LOOSE!"
    Search Input:       "666BATCH_ERROR~!!%"
    Output:             1

7.  Objective:          Try searching something long and complex
                        for multiple iterations of the word.
                        This test should hopefully work without
                        any further edits to the function.
    Main text Input:    The first paragraph of J.R.R. Tolkien's The
                        Hobbit
    Search Input:       "HOLE"
    Output:             6
